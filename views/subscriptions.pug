extends ./index.pug

block content
    .container
        .row
            .col-lg-5.mx-auto
                h2 Alarms
                div(id="SimpleJSTree")
                br
                button#jstree_button.btn.btn-primary Update Selected Alarms

            .col-lg-7.mx-auto
                h2 Details
                div(id="description")
                    h5 Hover over an Event to Have its Description Appear Here
                br
                br
                h2 Current Subscriptions
                table#subscriptions_table.display(style='width:100%')
                br
                br
                button#dtButton.btn.btn-primary Update Tags Selections
        br
        div(id='deletedsub')

         
block extra_scripts
    script.

        var catdata = !{JSON.stringify(categories)};
        var subdata = !{JSON.stringify(subscriptions)};

        ( function () {
            var table = $('#subscriptions_table').DataTable({
                "data": subdata,
                "paging": false,
                "searching": false,
                "columns": [
                    {title:"Category", data: "category"},
                    {title:"Subcategory", data: "subcategory"},
                    {title:"Event", data: 'event'},
                    {title:"Tags", data: 'tags',
                        render: function (data, type, row) {
                                //- console.log('data:',data,'row:',row );
                                if (row.tags === undefined){row.tags = '*';}
                                return '<input class="form-control tagInput" name="Tags" type="text" value = ' + row.tags + ' >';
                            }
                    },
                ],
                "drawCallback": function( settings ) {
                  $(".tagInput").on("change",function(){
                       var $row = $(this).parents("tr");
                       var rowData = table.row($row).data();
                       rowData.tags = $(this).val();
                       console.log('row changed', rowData);
                  })
                },
            });
        }());

        for (i=0; i<subdata.length; i++) {
            for (j=0; j<catdata.length; j++) {
                if (subdata[i] === catdata[j]) {
                    var deletedsubs = document.getElementById('deletedsubs')
                    deletedsubs.innerHTML = ''
                    deletedsubs.innerHTML = 'Your current subscription was either renamed or deleted. Upon updating your selected alarms, this alarm will no longer be a part of your current subscriptions.'
                }
            }
        }
        console.log("subdata:", subdata)

        treedata = []
        for (i=0; i<catdata.length; i++) {
            treedata.push({"id":catdata[i].category,"parent":"#","text":catdata[i].category});
            treedata.push({"id":catdata[i].category+" "+catdata[i].subcategory,"parent":catdata[i].category,"text":catdata[i].subcategory});
            treedata.push({"id":catdata[i].category+" "+catdata[i].subcategory+" "+catdata[i].event,"parent":catdata[i].category+" "+catdata[i].subcategory,"text":catdata[i].event,"data":catdata[i].description});
        };

        function multiDimensionalUnique(arr) {
            var uniques = [];
            var itemsFound = {};
            for(var i = 0, l = arr.length; i < l; i++) {
                var stringified = JSON.stringify(arr[i]);
                if(itemsFound[stringified]) { continue; }
                uniques.push(arr[i]);
                itemsFound[stringified] = true;
            }
            return uniques;
        }

        for (i=0; i<treedata.length; i+=3) {
            cat = treedata[i].text;
            sub = treedata[i+1].text;
            eve = treedata[i+2].text;
            var arr = {"category":cat,"subcategory":sub,"event":eve};
            for (j=0; j<subdata.length; j++) {
                //console.log('cat arr',arr);
                //console.log(subdata[j]);
                if (arr.category === subdata[j].category) {
                    if (arr.subcategory === subdata[j].subcategory) {
                        if (arr.event === subdata[j].event) {
                            //console.log('match',arr);
                            treedata[i+2].state = {"loaded":true, "opened": false, "selected":true, "disabled":false}
                        }
                    }
                }
            }
        }
        treedata = multiDimensionalUnique(treedata)
 
        //console.log('rendered subscriptions data',subdata);
        //console.log('rendered categories data',catdata);
        //console.log('test jstree data',treedata);

        $('#SimpleJSTree').jstree({
            core: {
                themes: {
                    variant: "large"
                },
                data: treedata
            },    
            plugins: ["checkbox"]
        });
        $('#SimpleJSTree').on("changed.jstree", function (e, data) {
            console.log(data);
        });
        $('#SimpleJSTree').bind("hover_node.jstree", function(e, data) {
            //console.log(data.node.data);
            if (data.node.children.length === 0) {
                var desc = document.getElementById('description')
                desc.innerHTML = "";
                desc.innerHTML = data.node.data;
            };
        });       

        console.log("Categories:", catdata);

        $('#jstree_button').click((event) => {
            subdata = []
            event.preventDefault();
            var checked_ids = [];
            checked_ids = $('#SimpleJSTree').jstree("get_selected",true)

            for (i=0; i<checked_ids.length; i++) {
                if (checked_ids[i].children.length ==0) {
                    for (j=0; j<catdata.length; j++) {
                        if (checked_ids[i].text == catdata[j].event) {
                            if (checked_ids[i].parents[1] == catdata[j].category) {
                                subdata.push(catdata[j])
                            }
                        }
                    }
                }
            };
            
            console.log(subdata)
        
            var toSend = JSON.stringify(subdata)
            if (subdata.length == 0) {
                var toSend = JSON.stringify([{'category': null ,'subcategory': null ,'event': null}])
            }
            console.log('toSend',toSend);
            let jqxhr = $.ajax({
                type: 'post',
                url: '/user/subscriptions/#{userId}',
                contentType: 'application/json',
                data: toSend,
                success() {
                    console.log('success');
                },
                error(xhr, textStatus, errorThrown) {
                    alert(`Error Code::${xhr.status}.${xhr.responseText}`);
                }
            })
            setTimeout(location.reload.bind(location), 300);

        });

        
        $('#dtButton').click((event) => {
            subdata=$('#subscriptions_table').DataTable().data().toArray();
            toSend=JSON.stringify(subdata);
            let jqxhr = $.ajax({
                type: 'post',
                url: '/user/subscriptions/#{userId}',
                contentType: 'application/json',
                data: toSend,
                success() {
                    console.log('success');
                },
                error(xhr, textStatus, errorThrown) {
                    alert(`Error Code::${xhr.status}.${xhr.responseText}`);
                }
            })
            setTimeout(location.reload.bind(location), 300);
        });